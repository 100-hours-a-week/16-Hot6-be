name: Backend CI & Dev CD

on:
  push:
    branches:
      - main
      - dev
      - feat/dev-cd

jobs:
  build:
    name: Build Backend
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'main' || 'dev' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: build/libs/*.jar

  deploy-dev:
    name: Deploy to Dev via SSH
    needs: build
    if: ${{ github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/feat/dev-cd' }}
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'main' || 'dev' }}

    steps:
      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: .

      - name: Find and rename JAR
        id: rename
        run: |
          echo "Searching for downloaded JAR file..."
          JAR_FILE=$(find . -name "*.jar" | head -n 1)
          if [ -z "$JAR_FILE" ]; then
            echo "JAR file not found!"
            exit 1
          fi
          echo "Found JAR: $JAR_FILE"
          cp "$JAR_FILE" backend.jar

      - name: Set up SSH config for jump server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.JUMP_SSH_KEY }}" > ~/.ssh/jump_key
          chmod 600 ~/.ssh/jump_key

          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/dev_key
          chmod 600 ~/.ssh/dev_key

          cat <<EOF > ~/.ssh/config
          Host dev-server
              HostName ${{ secrets.SSH_HOST }}
              User ubuntu
              IdentityFile ~/.ssh/dev_key
              ProxyJump jump-server
              StrictHostKeyChecking no
              UserKnownHostsFile /dev/null

          Host jump-server
              HostName ${{ secrets.JUMP_SSH_HOST }}
              User ubuntu
              IdentityFile ~/.ssh/jump_key
              StrictHostKeyChecking no
              UserKnownHostsFile /dev/null
          EOF

      - name: Copy JAR to dev server via jump server
        run: |
          ssh -F ~/.ssh/config dev-server 'mkdir -p ~/backend'
          scp -F ~/.ssh/config backend.jar dev-server:/home/ubuntu/backend/backend.jar

      - name: Restart backend via jump server
        run: |
          ssh -F ~/.ssh/config dev-server <<'EOF'
            set -eux
            pkill -f backend.jar || true
            cd ~/backend
            nohup java -jar backend.jar > backend.log 2>&1 &
          EOF
