plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.kakaotech.ott'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// Spring Lock
	implementation "net.javacrumbs.shedlock:shedlock-spring:4.42.0"
	implementation "net.javacrumbs.shedlock:shedlock-provider-jdbc-template:4.42.0"

	// Spring Security OAuth2 Core
	implementation 'org.springframework.security:spring-security-oauth2-core'

	// JAXB API
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	// JWT (JJWT)
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly    'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly    'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Lombok
	compileOnly    'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Amazon
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.673'

	// ULID
	implementation 'de.huxhorn.sulky:de.huxhorn.sulky.ulid:8.2.0'

	// Database drivers
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.h2database:h2'

	// Flyway
	implementation 'org.flywaydb:flyway-mysql:9.22.3'
	implementation 'org.flywaydb:flyway-core:9.22.3'

	// DevTools (for local development)
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:5.1.0:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main {
		java {
			srcDir querydslDir
		}
	}
}


tasks.named('clean') {
	doFirst {
		delete querydslDir
	}
}